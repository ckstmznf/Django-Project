"웹 프레임워크" 인 장고를 사용하기 앞서, 가상환경에 대한 설명을 할게요. 
 - 패키지 충돌방지 : python 만 설치했을 때의 환경으로 돌아가서 라이브러리 의존성을 줄여줍니다.
 - 프로젝트 별로 패키지 관리 : "머신러닝 프로젝트", "크롤링 프로젝트" 각각을 분리해줌으로써 필요한 라이브러리만 설치되어있는 상태로 만들어줍니다. (라이브러리 의존성 문제가 줄어든다)
 - 파이썬 버전별로 관리 : 하나의 컴퓨터에서 다양한 버전의 python 으로 관리가 가능합니다.


1. 가상환경 설치
python -m venv ○○○○○

2. 가상환경 활성화 명령 (가상화 버튼 누른다고 생각하시면되요)
C:\○○○○\Scripts\activate

3. 장고 프로젝트 폴더(☆☆☆☆☆)는 ○○○○ 안에 생성
○○○○ 로 경로 이동 후!!
새폴더 만들기!

4. 장고 개발을 쉽게!! 시스템 명령어를 하나 설정합니다!

====================
c:\○○○○\Scripts\activate
====================
위의 내용을 _____.cmd 파일로 만든 뒤, 원하는 경로에 넣습니다.
아무데나 상관없지만 가상화 폴더 안에 만들어 주시는걸 권장합니다.
c:\○○○○  에 저장하는 걸로합니다!!
sysdm.cpl 에 들어가셔서 [고급] - [환경변수] 에서 
c:\○○○○ 를 path 로 추가해줍니다. 
이걸해줘야 ______ 를 입력했을 때 바로 작업을 시작하시면 되고,
가상화 버튼도 자동대로 눌러집니다!!

5. pip 로 Django 를 깔아주셔야해요!!
   ☆☆☆☆☆ 안에서 code로 열기로 VScode 를 열어주세요.
   그리고 새터미널에서 하단에 Terminal 을 Command Prompt
   로 세팅합니다.
   ♣ pip install django   (장고 설치)
   pip list   (설치 확인용)

6. 장고 프로젝트 시작
   _____ 를 입력하시면 작업 환경으로 자동대로 이동되실거에요
   ♣ django-admin startproject config . 

7. 서버구동
   ♣ python manage.py runserver  
